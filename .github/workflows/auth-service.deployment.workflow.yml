name: Build and Deploy auth-service to Cloud Run

on:
  push:
    tags:
      - "auth-service-v*"

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}
  SERVICE: ${{ secrets.AUTH_SERVICE_CLOUD_RUN_NAME }}
  REGION: ${{ secrets.AUTH_SERVICE_CLOUD_RUN_LOCATION }}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        working-directory: ./backend/services/auth-service
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/production/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/production/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/production/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--port 8081'
          env_vars: |
            SERVICE_CONFIG=${{ secrets.AUTH_SERVICE_CONFIG }}
